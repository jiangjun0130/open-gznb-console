package com.gznb.open.domain.vo.base;import java.io.Serializable;import java.util.List;/** * 分页信息实体 *  * @author JJ * */public class PageBean implements Serializable{    // 指定的或是页面参数    private Integer currentPage;// 当前页    private Integer pageSize; // 每页显示多少条    // 查询数据库    private Integer recordCount; // 总记录数    private List recordList; // 本页的数据列表    // 计算    private Integer startIndex; // 数据库记录开始索引    private Integer endIndex; // 数据库记录结束索引    private Integer pageCount; // 总页数    private Integer beginPageIndex; // 页码列表的开始索引（包含）    private Integer endPageIndex; // 页码列表的结束索引（包含）    public PageBean() {        this.currentPage = 1;        this.pageSize = 10;    }    /**     * 只接受前4个必要的属性，会自动的计算出其他3个属生的值     *      * @param currentPage     * @param pageSize     * @param recordCount     * @param recordList     */    public PageBean(int currentPage, int pageSize, int recordCount, List recordList) {        this.currentPage = currentPage;        this.pageSize = pageSize;        this.recordCount = recordCount;        this.recordList = recordList;        // 计算开始索引号        startIndex = (this.currentPage - 1) * pageSize;        // 计算总页码        pageCount = (recordCount + pageSize - 1) / pageSize;        // 计算 beginPageIndex 和 endPageIndex        // >> 总页数不多于10页，则全部显示        if (pageCount <= 10) {            beginPageIndex = 1;            endPageIndex = pageCount;        }        // >> 总页数多于10页，则显示当前页附近的共10个页码        else {            // 当前页附近的共10个页码（前4个 + 当前页 + 后5个）            beginPageIndex = currentPage - 4;            endPageIndex = currentPage + 5;            // 当前面的页码不足4个时，则显示前10个页码            if (beginPageIndex < 1) {                beginPageIndex = 1;                endPageIndex = 10;            }            // 当后面的页码不足5个时，则显示后10个页码            if (endPageIndex > pageCount) {                endPageIndex = pageCount;                beginPageIndex = pageCount - 10 + 1;            }        }    }    public PageBean(Integer currentPage, Integer pageSize) {        if (pageSize == null || pageSize == 0) {            this.pageSize = 10;        } else {            this.pageSize = pageSize;        }        if (currentPage == null || currentPage == 0) {            this.currentPage = 1;            this.startIndex = -1;        } else {            this.currentPage = currentPage;            this.startIndex = (this.currentPage - 1) * this.pageSize;            this.endIndex = this.currentPage * this.pageSize;        }    }    public Integer getCurrentPage() {        return currentPage;    }    public void setCurrentPage(Integer currentPage) {        this.currentPage = currentPage;    }    public Integer getPageSize() {        return pageSize;    }    public void setPageSize(Integer pageSize) {        this.pageSize = pageSize;    }    public Integer getRecordCount() {        return recordCount;    }    public void setRecordCount(Integer recordCount) {        this.recordCount = recordCount;    }    public List getRecordList() {        return recordList;    }    public void setRecordList(List recordList) {        this.recordList = recordList;    }    public Integer getPageCount() {        return pageCount;    }    public void setPageCount(Integer pageCount) {        this.pageCount = pageCount;    }    public Integer getBeginPageIndex() {        return beginPageIndex;    }    public void setBeginPageIndex(Integer beginPageIndex) {        this.beginPageIndex = beginPageIndex;    }    public Integer getEndPageIndex() {        return endPageIndex;    }    public void setEndPageIndex(Integer endPageIndex) {        this.endPageIndex = endPageIndex;    }    public Integer getStartIndex() {        return startIndex;    }    public void setStartIndex(Integer startIndex) {        this.startIndex = startIndex;    }    public Integer getEndIndex() {        return endIndex;    }    public void setEndIndex(Integer endIndex) {        this.endIndex = endIndex;    }}